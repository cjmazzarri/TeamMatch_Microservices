openapi: 3.0.1
info:
  title: Game Endpoint OpenAPI definition
  version: v1
servers:
  - url: http://localhost:8081
    description: Generated server url
tags:
  - name: Game
    description: Everything about your TeamMatch games.
paths:
  /api/games/{gameId}:
    get:
      tags:
        - Game
      summary: "Get Game by Id"
      description: "Returns a game by the Game Id from TeamMatch"
      operationId: "getGameById"
      parameters:
        - name: "gameId"
          in: "path"
          description: "ID of player to return profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GameResource'
        "404":
          description: "Game with Game ID not found"
    put:
      tags:
        - Game
      summary: "Update Game"
      description: "Updates a game from TeamMatch"
      operationId: "updateGame"
      parameters:
        - name: "gameId"
          in: "path"
          description: "ID of player to update profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveGameResource'
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GameResource'
        "400":
          description: "Invalid game format"
        "404":
          description: "Game not found"
    post:
      tags:
        - Game
      summary: "Create Game"
      description: "Create a new game for TeamMatch"
      operationId: "createGame"
      parameters:
        - name: "gameId"
          in: "path"
          description: "Adding a game to the application"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveGameResource'
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GameResource'
        "400":
          description: "Invalid game format"
    delete:
      tags:
        - Game
      summary: "Delete Game"
      description: "Deletes a game from TeamMatch"
      operationId: "deleteGame"
      parameters:
        - name: "gameId"
          in: "path"
          description: "Deletion of a Game"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                type: object

components:
  schemas:
    SaveGameResource:
      required:
        - name
        - gameTeamSize
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          maxLength: 20
          minLength: 0
          type: string
          example: "Apex Legends"
        gameTeamSize:
          type: integer
          example: 3
    GameResource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Apex Legends"
        gameTeamSize:
          type: integer
          example: 3
openapi: 3.0.1
info:
  title: Game Endpoint OpenAPI definition
  version: v1
servers:
  - url: http://localhost:8081
    description: Generated server url
tags:
  - name: Game
    description: Everything about your TeamMatch games.
paths:
  /api/games/{gameId}:
    get:
      tags:
        - Game
      summary: "Get Game by Id"
      description: "Returns a game by the Game Id from TeamMatch"
      operationId: "getGameById"
      parameters:
        - name: "gameId"
          in: "path"
          description: "ID of player to return profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GameResource'
        "404":
          description: "Game with Game ID not found"
    put:
      tags:
        - Game
      summary: "Update Game"
      description: "Updates a game from TeamMatch"
      operationId: "updateGame"
      parameters:
        - name: "gameId"
          in: "path"
          description: "ID of player to update profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveGameResource'
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GameResource'
        "400":
          description: "Invalid game format"
        "404":
          description: "Game not found"
    post:
      tags:
        - Game
      summary: "Create Game"
      description: "Create a new game for TeamMatch"
      operationId: "createGame"
      parameters:
        - name: "gameId"
          in: "path"
          description: "Adding a game to the application"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveGameResource'
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GameResource'
        "400":
          description: "Invalid game format"
    delete:
      tags:
        - Game
      summary: "Delete Game"
      description: "Deletes a game from TeamMatch"
      operationId: "deleteGame"
      parameters:
        - name: "gameId"
          in: "path"
          description: "Deletion of a Game"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                type: object

components:
  schemas:
    SaveGameResource:
      required:
        - name
        - gameTeamSize
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          maxLength: 20
          minLength: 0
          type: string
          example: "Apex Legends"
        gameTeamSize:
          type: integer
          example: 3
    GameResource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Apex Legends"
        gameTeamSize:
          type: integer
          example: 3
