openapi: 3.0.1
info:
  title: Profile Endpoint OpenAPI definition
  version: v1
servers:
  - url: http://localhost:8096
    description: Generated server url
tags:
  - name: Profile
    description: Everything about your TeamMatch profile.
paths:
  /api/players/{id}/profiles:
    get:
      tags:
        - Profile
      summary: "Get Profile by Player Id"
      description: "Returns a profile by the Player Id from TeamMatch"
      operationId: "getProfileByPlayerId"
      parameters:
        - name: "playerId"
          in: "path"
          description: "ID of player to return profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResource'
        "404":
          description: "Profile with Player ID not found"
    put:
      tags:
        - Profile
      summary: "Update Profile by Player Id"
      description: "Updates a profile by the Player Id from TeamMatch"
      operationId: "updateProfileByPlayerId"
      parameters:
        - name: "playerId"
          in: "path"
          description: "ID of player to update profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveProfileResource'
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResource'
        "400":
          description: "Invalid profile format"
        "404":
          description: "Profile with Player ID not found"
    post:
      tags:
        - Profile
      summary: "Create Profile by Player Id"
      description: "Create a new profile by the Player Id from TeamMatch"
      operationId: "createProfileByPlayerId"
      parameters:
        - name: "playerId"
          in: "path"
          description: "ID of player to create profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveProfileResource'
        required: true
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResource'
        "400":
          description: "Invalid profile format"
    delete:
      tags:
        - Profile
      summary: "Delete Profile by Player Id"
      description: "Deletes a new profile by the Player Id from TeamMatch"
      operationId: "deleteProfileByPlayerId"
      parameters:
        - name: "playerId"
          in: "path"
          description: "ID of player to delete profile"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                type: object
  /api/players/{playerUsername}/profilesUsername:
    get:
      tags:
        - Profile
      summary: "Get Profile by Player Username"
      description: "Returns a profile by the Username from TeamMatch"
      operationId: "getProfileByPlayerUsername"
      parameters:
        - name: "playerUsername"
          in: "path"
          description: "Username of player to return profile"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Successful operation"
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileResource'
components:
  schemas:
    SaveProfileResource:
      required:
        - birthDate
        - description
        - email
        - fullName
        - gender
        - phoneNumber
        - username
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName:
          maxLength: 20
          minLength: 0
          type: string
          example: "Marcelo Virgolini"
        username:
          maxLength: 20
          minLength: 0
          type: string
          example: "marcelofiaun22"
        description:
          maxLength: 50
          minLength: 0
          type: string
          example: "Just your average gamer."
        gender:
          maxLength: 20
          minLength: 0
          type: string
          example: "Masculino"
        email:
          maxLength: 30
          minLength: 0
          type: string
          example: "marcelofii@gameil.com"
        phoneNumber:
          maxLength: 30
          minLength: 0
          type: string
          example: "998452369"
        birthDate:
          maxLength: 30
          minLength: 0
          type: string
          example: "02/10/1998"
    ProfileResource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        fullName:
          type: string
          example: "Marcelo Virgolini"
        username:
          type: string
          example: "marcelofiaun22"
        description:
          type: string
          example: "Just your average gamer."
        gender:
          type: string
          example: "Masculino"
        email:
          type: string
          example: "marcelofii@gameil.com"
        phoneNumber:
          type: string
          example: "998452369"
        birthDate:
          type: string
          example: "02/10/1998"